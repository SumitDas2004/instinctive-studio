datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Student {
  roll_number Int               @id @default(autoincrement()) @db.Integer
  name        String
  courses     StudentOnCourse[]
  date_joined DateTime          @default(now())
  last_login  DateTime
  cohort      Cohort            @relation("taken_in", references: [cohort_id], fields: [cohort_id])
  cohort_id   String            @db.Uuid
  status      Boolean           @db.Boolean

  @@map("student")
}

model StudentOnCourse {
  roll_number Int     @db.Integer
  student     Student @relation(fields: [roll_number], references: [roll_number])
  course_id   String  @db.Uuid
  course      Course  @relation(fields: [course_id], references: [course_id])

  @@id([roll_number, course_id])
  @@map("student_on_course")
}

model Course {
  course_id         String            @id @default(uuid()) @db.Uuid
  name              String            @db.Text
  students_enrolled StudentOnCourse[]
  teacher_id        String            @unique @db.Uuid
  taught_by         Teacher           @relation("taught_by", fields: [teacher_id], references: [teacher_id])

  @@map("course")
}

model Cohort {
  cohort_id         String    @id @default(uuid()) @db.Uuid
  name              String    @db.Text
  students_enrolled Student[] @relation("taken_in")

  @@map("cohort")
}

model Teacher {
  teacher_id String  @id @default(uuid()) @db.Uuid
  name       String
  picture    String
  course     Course? @relation("taught_by")

  @@map("teacher")
}
